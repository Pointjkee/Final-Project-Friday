{"version":3,"sources":["component/restorePassword/Restore.module.css","component/register/Register.module.css","common/superButton/SuperButton.module.css","common/superCheckbox/SuperCheckbox.module.css","component/header/Header.module.css","common/preloader/Preloader.module.css","api/api.ts","reducers/restoreReducer.tsx","component/restorePassword/infoSentEmail/ErrorAlert.tsx","component/header/Header.tsx","reducers/registerReducer.tsx","component/register/Register.tsx","reducers/newPasswordReducer.tsx","component/newPassword/newPassword.tsx","component/restorePassword/RestorePassword.tsx","common/superButton/SuperButton.tsx","common/superCheckbox/SuperCheckbox.tsx","common/superInputText/SuperInputText.tsx","Test.tsx","reducers/appReducer.tsx","reducers/authReducer.tsx","reducers/profileReducer.tsx","assets/images/nonAvatarPic.png","common/preloader/Preloader.tsx","component/profile/Profile.tsx","component/login/Login.tsx","component/restorePassword/infoSentEmail/InfoSentEmail.tsx","component/routes/RoutesC.tsx","App.tsx","store/store.ts","index.tsx","component/profile/Profile.module.css","common/superInputText/SuperInputText.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","userAPI","email","password","post","forgot","newPassword","data","delete","profileAPI","put","initialState","statusOfSentMessage","error","errorMessageEmail","type","Alert","React","props","ref","elevation","variant","ErrorAlert","useSelector","state","restorePass","dispatch","useDispatch","handleClose","event","reason","isOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","sx","width","Header","className","s","container","to","isRegister","Register","memo","useState","setEmail","password1","setPassword1","password2","setPassword2","pass1","setPass1","pass2","setPass2","errorRegister","register","errorPassword","styles","main","Container","paddingBottom","marginTop","TextField","id","label","value","onChange","e","currentTarget","size","style","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","VisibilityOff","Visibility","color","Button","then","res","catch","response","status","setErrorAC","registerThunk","marginRight","textDecoration","statusNewPassword","useStyles","makeStyles","stylePaper","height","display","flexDirection","borderRadius","left","top","padding","justifyContent","alignItems","NewPassword","classes","token","useParams","newPass","navigation","useNavigate","pass","setPass","resetPasswordToken","changePassword","signupSchema","Yup","required","min","matches","formik","useFormik","initialValues","validationSchema","onSubmit","values","handleSubmit","Paper","touched","Boolean","errors","helperText","name","placeholder","handleChange","text","backgroundColor","RestorePassword","sendInstruction","from","message","shape","SuperButton","red","restProps","finalClassName","default","SuperCheckbox","onChangeChecked","children","spanClassName","onChangeTest","onChangeCallback","checked","finalInputClassName","checkbox","SuperInputText","onChangeText","onKeyPress","onEnter","styleInput","finalSpanClassName","errorInput","superInput","key","Test","setAppStatus","isLoggedIn","setIsLoggedInAC","profile","_id","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","setProfile","Preloader","loader","CircularProgress","Profile","app","auth","editMode","setEditMode","useForm","defaultValues","console","log","updatedUser","editProfile","activateEditMode","photo","src","nonAvatarPic","alt","info","onDoubleClick","form","info_form","Input","button","Login","validate","length","FormControl","FormLabel","FormGroup","getFieldProps","FormControlLabel","control","Checkbox","InfoSentEmail","RoutesC","path","element","App","useEffect","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90a9cb6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Restore_text__2hWHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__1yitS\",\"container\":\"Register_container__1ydEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__18nk9\",\"red\":\"SuperButton_red__4O9XB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1hhZ8\",\"spanClassName\":\"SuperCheckbox_spanClassName__3WXw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__OPBi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__14u14\"};","import axios, {AxiosResponse} from 'axios'\r\nimport {ForgotType} from \"../reducers/restoreReducer\";\r\nimport {ChangePasswordType} from \"../reducers/newPasswordReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\nexport const userAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post(`/auth/register/`, {email, password});\r\n    },\r\n    restorePassword(forgot: ForgotType){\r\n        return instance.post<AxiosResponse<AuthResponseType>>(`/auth/forgot`, forgot)\r\n    },\r\n    changePassword(newPassword: ChangePasswordType){\r\n        return instance.post<AxiosResponse<AuthResponseType>>(`/auth/set-new-password`, newPassword)\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ResponseType>('auth/login', data)\r\n    },\r\n    logOut(){\r\n        return instance.delete('/auth/me')\r\n    },\r\n    me() {\r\n        return instance.post('/auth/me')\r\n    },\r\n}\r\n\r\n\r\n\r\nexport const profileAPI ={\r\n    setProfile(data:SetProfileType){\r\n        return instance.put('/auth/me', data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type SetProfileType = {\r\n    name: string\r\n    avatar: string | null\r\n}\r\n\r\ntype AuthResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}","import {Dispatch} from \"redux\";\r\nimport {userAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    statusOfSentMessage: false,\r\n    error: \"\",\r\n    email: \"\",\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const restorePassReducer = (state: InitialStateType = initialState, action: ActionRestoreType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"RESTORE/CHANGE-STATUS-MESSAGE\": {\r\n            return {...state, statusOfSentMessage: action.status}\r\n        }\r\n        case \"RESTORE/ERROR-MESSAGE\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        case \"RESTORE/SET-EMAIL\": {\r\n            return {...state, email: action.email}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionRestoreType = StatusMessageType | ErrorMessageEmailType | SetEmailType\r\ntype StatusMessageType = ReturnType<typeof changeStatusMessage>\r\nexport const changeStatusMessage = (status: boolean) => ({type: \"RESTORE/CHANGE-STATUS-MESSAGE\", status} as const)\r\n\r\ntype ErrorMessageEmailType = ReturnType<typeof errorMessageEmail>\r\nexport const errorMessageEmail = (error: string) => ({type: \"RESTORE/ERROR-MESSAGE\", error} as const)\r\n\r\ntype SetEmailType = ReturnType<typeof setEmail>\r\nexport const setEmail = (email: string) => ({type: \"RESTORE/SET-EMAIL\", email} as const)\r\n\r\n\r\nexport const SendInstructionToEmail = (forgot: ForgotType) => (dispatch: Dispatch) => {\r\n    userAPI.restorePassword(forgot)\r\n        .then((res) => {\r\n            if (res.status === 200)\r\n                dispatch(setEmail(forgot.email))\r\n                dispatch(changeStatusMessage(true))\r\n        })\r\n        .catch(error => {\r\n                if (error.response.status === 404 || error.response.status === 401) {\r\n                    dispatch(errorMessageEmail(error.response.data.error))\r\n                }\r\n            }\r\n        )\r\n}\r\n\r\n\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}","import * as React from 'react';\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\r\nimport {errorMessageEmail} from \"../../../reducers/restoreReducer\";\r\n\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props,\r\n    ref,\r\n) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport function ErrorAlert() {\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.restorePass.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(errorMessageEmail(\"\"))\r\n    };\r\n\r\n\r\n    const isOpen = error !== \"\"\r\n\r\n    return (\r\n        <Snackbar anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}} open={isOpen} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ErrorAlert} from \"../restorePassword/infoSentEmail/ErrorAlert\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <NavLink to='/login'> Login</NavLink>\r\n            <NavLink to='/register'> Register</NavLink>\r\n            <NavLink to='/profile'> Profile</NavLink>\r\n            <ErrorAlert/>\r\n            <NavLink to='/restore'> Restore password</NavLink>\r\n            <NavLink to='/test'> Test</NavLink>\r\n            <NavLink to='/404'> 404</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import {Dispatch} from \"redux\"\r\nimport {userAPI} from \"../api/api\"\r\n\r\nconst initialState = {\r\n    error: null,\r\n    isRegister: false\r\n}\r\ntype initialStateType = {\r\n    error: string | null,\r\n    isRegister: boolean\r\n}\r\n// type InitialStateType = typeof initialState\r\ntype ActionType = registerACType | setErrorACType\r\n\r\nexport const registerReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTER': {\r\n            return {...state, isRegister: action.isRegister}\r\n        }\r\n        case 'SET_ERROR': {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype registerACType = ReturnType<typeof registerAC>\r\n\r\nconst registerAC = () => {\r\n    return {type: 'REGISTER', isRegister: true} as const\r\n}\r\n\r\ntype setErrorACType = ReturnType<typeof setErrorAC>\r\n\r\nconst setErrorAC = (error: string | null) => {\r\n    return {type: 'SET_ERROR', error} as const\r\n}\r\nexport const registerThunk = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    userAPI.register(email, password)\r\n        .then((res) => {\r\n            dispatch(registerAC())\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 400) {\r\n                dispatch(setErrorAC(error.response.data.error))\r\n            }\r\n        })\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport styles from './Register.module.css'\r\nimport {registerThunk} from \"../../reducers/registerReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport {Container, IconButton, InputAdornment, TextField} from \"@mui/material\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const Register = React.memo(() => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password1, setPassword1] = useState<string>('')\r\n    const [password2, setPassword2] = useState<string>('')\r\n    const [pass1, setPass1] = useState<boolean>(false)\r\n    const [pass2, setPass2] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    const errorRegister = useSelector<AppRootStateType, string | null>(state => state.register.error)\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePassword1 = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPassword1(e.currentTarget.value)\r\n    }\r\n    const onChangePassword2 = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n    const onChange = () => {\r\n        if (password1 === password2) {\r\n            dispatch(registerThunk(email, password1))\r\n        }\r\n    }\r\n    let errorPassword = false\r\n    if (password1 !== password2) {\r\n        errorPassword = true\r\n    }\r\n    if (isRegister) {\r\n        return <Navigate to='/login'/>\r\n    }\r\n    const togglePassword1 = () => {\r\n        setPass1(!pass1)\r\n    }\r\n    const togglePassword2 = () => {\r\n        setPass2(!pass2)\r\n    }\r\n    return (\r\n        <div className={styles.main}>\r\n            <Container\r\n                className={styles.container}\r\n                sx={{width: 400, paddingBottom: 5, marginTop:3}}\r\n            >\r\n                <h1>It-incubator</h1>\r\n                <h3>Sign Up</h3>\r\n                <div>\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"Email\"\r\n                        value={email}\r\n                        onChange={onChangeEmail}\r\n                        sx={{width: 300}}\r\n                        size='small'\r\n                    />\r\n                </div>\r\n                <div style={{marginTop: 20}}>\r\n                    <TextField\r\n                        type={pass1 ? 'text' : 'password'}\r\n                        label='Password'\r\n                        size='small'\r\n                        sx={{width: 300}}\r\n                        value={password1}\r\n                        onChange={onChangePassword1}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={togglePassword1}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {pass1 ? <VisibilityOff/> : <Visibility/>}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div style={{marginTop: 20}}>\r\n                        <TextField\r\n                            type={pass2 ? 'text' : 'password'}\r\n                            label='Confirm Password'\r\n                            size='small'\r\n                            sx={{width: 300}}\r\n                            value={password2}\r\n                            onChange={onChangePassword2}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={togglePassword2}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {pass2 ? <VisibilityOff/> : <Visibility/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {errorPassword\r\n                &&\r\n                <div style={{color: 'red'}}> Incorrect passwords!</div>\r\n                ||\r\n                !!errorRegister\r\n                &&\r\n                <div style={{color: 'red'}}>{errorRegister}</div>\r\n                }\r\n                <div style={{marginTop: 30}}>\r\n                    <Button\r\n                        size='medium'\r\n                        onClick={onChange}\r\n                        variant=\"contained\"\r\n                        style={{marginRight: 50}}\r\n                    >Register</Button>\r\n                    <Link to=\"/login\" style={{textDecoration: 'none'}}>\r\n                        <Button size='medium' variant=\"outlined\">Cancel</Button>\r\n                    </Link>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n})","import {Dispatch} from \"redux\";\r\nimport {userAPI} from \"../api/api\";\r\nimport {errorMessageEmail} from \"./restoreReducer\";\r\n\r\nconst initialState = {\r\n    statusNewPassword: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ChangePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW-PASSWORD/CHANGE-STATUS-PASSWORD\":{\r\n            return {...state, statusNewPassword: action.status}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ChangePasswordActionsType = NewPasswordType\r\n\r\ntype NewPasswordType = ReturnType<typeof statusPasswordChange>\r\nexport const statusPasswordChange = (status: boolean) => ({type:\"NEW-PASSWORD/CHANGE-STATUS-PASSWORD\", status} as const)\r\n\r\nexport const changePassword = (newPassword: ChangePasswordType) => (dispatch:Dispatch) => {\r\n        userAPI.changePassword(newPassword)\r\n            .then(res=>{\r\n                    dispatch(statusPasswordChange(true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 404 || error.response.status === 401) {\r\n                    dispatch(errorMessageEmail(error.response.data.error))\r\n                }\r\n            })\r\n}\r\n\r\nexport type ChangePasswordType={\r\n    password: string\r\n    resetPasswordToken: string|undefined\r\n}\r\n","import React, {useState} from \"react\";\r\nimport s from '../restorePassword/Restore.module.css'\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {changePassword} from \"../../reducers/newPasswordReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Paper, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {IconButton, InputAdornment} from \"@mui/material\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    stylePaper: {\r\n        width: \"413px\",\r\n        height: \"540px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        borderRadius: \"8px\",\r\n        left: \"434px\",\r\n        top: \"84px\",\r\n        padding: \"33px\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n    }\r\n});\r\n\r\nexport const NewPassword = () => {\r\n    const classes = useStyles()\r\n    const {token} = useParams()\r\n    const dispatch = useDispatch()\r\n    const statusNewPassword = useSelector<AppRootStateType, boolean>(state => state.newPass.statusNewPassword)\r\n    const navigation = useNavigate()\r\n    const [pass, setPass] = useState<boolean>(false)\r\n\r\n    const togglePassword = () => {\r\n        setPass(!pass)\r\n    }\r\n\r\n    const resetPasswordToken = token\r\n    const newPassword = (password: string) => {\r\n        if (token) {\r\n            dispatch(changePassword({password, resetPasswordToken}))\r\n        }\r\n    }\r\n\r\n    const signupSchema = Yup.object({\r\n        password: Yup.string()\r\n            .required('Please Enter your password')\r\n            .min(7)\r\n            .matches(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{7,}/, \"Password must contain at least 7 characters, one uppercase, one number and one lowwer case character\")\r\n    });\r\n\r\n    if (statusNewPassword) {\r\n        navigation('/login')\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: \"\",\r\n        },\r\n        validationSchema: signupSchema,\r\n        onSubmit: values => {\r\n            newPassword(values.password)\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} style={{display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\r\n            <Paper className={classes.stylePaper}>\r\n                <h1>It-incubator</h1>\r\n                <h3>Create new password </h3>\r\n                <TextField\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                    sx={{width: \"347px\"}}\r\n                    variant={'standard'}\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type={pass ? 'text' : 'password'}\r\n                    placeholder={\"Password\"}\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={togglePassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {pass ? <VisibilityOff/> : <Visibility/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n                <h4 className={s.text}>Create new password and we will send you further instruction to email</h4>\r\n                <Button sx={{borderRadius: '30px', backgroundColor: \"#21268F\", width: \"266px\"}} variant={\"contained\"} type=\"submit\">Create new password</Button>\r\n            </Paper>\r\n        </form>\r\n    );\r\n}","import React from \"react\";\r\nimport {SendInstructionToEmail} from \"../../reducers/restoreReducer\";\r\nimport s from './Restore.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Paper, TextField} from \"@material-ui/core\";\r\nimport * as Yup from 'yup';\r\nimport {useStyles} from \"../newPassword/newPassword\";\r\n\r\nexport const RestorePassword = () => {\r\n    const navigation = useNavigate()\r\n    const statusOfSentMessage = useSelector<AppRootStateType, boolean>(state => state.restorePass.statusOfSentMessage)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const from = \"test-front-admin <ai73a@yandex.by>\"\r\n    const message = `<div style=\"background-color: lime; padding: 15px\">\r\n\t<a href='https://pointjkee.github.io/Final-Project-Friday/#/set-new-password/$token$'>Change Password</a></div>`\r\n\r\n    const sendInstruction = (email: string) => {\r\n        dispatch(SendInstructionToEmail({email, from, message}))\r\n    }\r\n\r\n    if (statusOfSentMessage) {\r\n        navigation('/info-sent-email')\r\n    }\r\n\r\n    const signupSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Required field'),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n        },\r\n        validationSchema: signupSchema,\r\n        onSubmit: values => {\r\n            sendInstruction(values.email)\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} style={{display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\r\n            <Paper className={classes.stylePaper}>\r\n                <h1>It-incubator</h1>\r\n                <h3>Forgot your password? </h3>\r\n                <TextField\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                    sx={{width: \"347px\"}}\r\n                    variant={'standard'}\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder={\"Email\"}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <h4 className={s.text}>Enter your email address and we will send you further instructions </h4>\r\n                <Button sx={{borderRadius: '30px', backgroundColor: \"#21268F\", width: \"266px\"}} variant={\"contained\"} type=\"submit\">Send Instructions</Button>\r\n            </Paper>\r\n\r\n        </form>\r\n    );\r\n\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    onChangeTest?: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        onChangeTest, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={(e) => onChangeCallback(e)}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    styleInput?:string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, styleInput,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput}  ${s.superInput ? s.superInput : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={styleInput}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import SuperButton from \"./common/superButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/superCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"./common/superInputText/SuperInputText\";\r\nimport React from \"react\";\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <SuperButton>Button</SuperButton>\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n            <div>\r\n                <SuperInputText/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","\r\nexport type RequestStatusType = 'loading' | 'success' | 'failed'\r\n\r\nexport const initialState = {\r\n    status: 'loading' as RequestStatusType\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET_STATUS':\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatus = (status: RequestStatusType) => {\r\n    return {type: 'APP/SET_STATUS', status} as const;\r\n}\r\n\r\ntype ActionsType = SetAppStatusType\r\n\r\nexport type SetAppStatusType = ReturnType<typeof setAppStatus>","import {userAPI, LoginParamsType} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setProfile} from \"./profileReducer\";\r\nimport {setAppStatus} from \"./appReducer\";\r\n\r\ntype setIsLoggedInAT = {\r\n    type: 'LOGIN',\r\n    value: boolean\r\n}\r\ntype ActionsType = setIsLoggedInAT\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setIsLoggedInAC = (value: boolean): setIsLoggedInAT => ({type: 'LOGIN', value} as const)\r\n\r\nexport const loginThunk = (data: LoginParamsType) => {\r\n    return (dispatch: Dispatch) => {\r\n        userAPI.login(data)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    dispatch(setProfile(res.data))\r\n                    dispatch(setIsLoggedInAC(true))\r\n                }\r\n            })\r\n            .catch(e => {\r\n                    const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport const logOut = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatus('loading'))\r\n    userAPI.logOut()\r\n        .then(res=>{\r\n            dispatch(setProfile({\r\n                _id: null,\r\n                email: null,\r\n                name: '',\r\n                avatar: null,\r\n                publicCardPacksCount: null,\r\n                created: null,\r\n                updated: null,\r\n                isAdmin: null,\r\n                verified: null,\r\n                rememberMe: null,\r\n                error: null})\r\n            )\r\n            dispatch(setAppStatus('success'))\r\n            dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n        })\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const authMe = () => (dispatch: Dispatch) => {\r\n    userAPI.me()\r\n        .then(res => {\r\n            dispatch(setProfile(res.data))\r\n            dispatch(setAppStatus('success'))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            console.log(error)\r\n            dispatch(setAppStatus('failed'))\r\n        })\r\n}","import {Dispatch} from \"redux\";\r\nimport {profileAPI, SetProfileType} from \"../api/api\";\r\nimport {setAppStatus} from \"./appReducer\";\r\nimport {setIsLoggedInAC} from \"./authReducer\";\r\n\r\n\r\nexport type ActionTypes = ReturnType<typeof setProfile>\r\n\r\nexport type ProfileResponseType ={\r\n    _id: string | null;\r\n    email: string | null;\r\n    name: string\r\n    avatar?: string | null\r\n    publicCardPacksCount: number | null\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean | null\r\n    verified: boolean | null\r\n    rememberMe: boolean | null\r\n    error?: string | null\r\n}\r\n\r\nconst initialState = {\r\n    profile: {\r\n        _id: null as string | null,\r\n        email: null as string | null,\r\n        name: '',\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: null as number | null,\r\n        created: null as Date | null,\r\n        updated: null as Date | null,\r\n        isAdmin: null as boolean | null,\r\n        verified: null as boolean | null,\r\n        rememberMe: null as boolean | null,\r\n        error: null as string | null,\r\n    }\r\n}\r\n\r\n\r\nexport type InitialStateTypeProfile = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateTypeProfile = initialState, action: ActionTypes): InitialStateTypeProfile => {\r\n    switch (action.type) {\r\n        case 'SET_PROFILE':\r\n       return {...state,profile: {...state.profile,...action.profile}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setProfile = (profile:ProfileResponseType) =>({\r\n    type: \"SET_PROFILE\", profile\r\n} as const )\r\n\r\n\r\n\r\nexport const editProfile = (data:SetProfileType) => (dispatch:Dispatch)=>{\r\n        dispatch(setAppStatus('loading'))\r\n    profileAPI.setProfile(data)\r\n        .then(res =>{\r\n            dispatch(setProfile(res.data.updatedUser))\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setAppStatus('success'))\r\n        })\r\n        .catch(e =>{\r\n            const error = e.response ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setAppStatus('failed'))\r\n        })\r\n\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/nonAvatarPic.69bffc6f.png\";","import * as React from 'react';\r\nimport {CircularProgress} from \"@mui/material\";\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader=()=> {\r\n    return (\r\n       <div className={s.loader}>\r\n           <CircularProgress />\r\n       </div>\r\n    );\r\n}","import {Button, Input} from '@mui/material';\r\nimport React, {useState} from 'react';\r\nimport s from './Profile.module.css'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {editProfile, InitialStateTypeProfile} from \"../../reducers/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport nonAvatarPic from \"../../assets/images/nonAvatarPic.png\"\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {logOut} from \"../../reducers/authReducer\";\r\nimport {RequestStatusType} from \"../../reducers/appReducer\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nconst Profile = () => {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state=> state.app.status)\r\n    const profile = useSelector<AppRootStateType, InitialStateTypeProfile>(state => state.profile);\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const {\r\n        email,\r\n        name,\r\n        avatar\r\n    } = profile.profile\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const {register, handleSubmit} = useForm({defaultValues:{\r\n            name:name,\r\n            avatar:avatar\r\n        }})\r\n    const onSubmit = handleSubmit(data => {\r\n        console.log(data)\r\n        dispatch(editProfile(data))});\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n\r\n\r\n    const onLogOutClick = () => {\r\n        dispatch(logOut())\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to='/login'/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.photo}>\r\n                <span>Personal Information</span>\r\n                <img\r\n                    src={avatar ? avatar : nonAvatarPic}\r\n                    alt=\"photo\"/>\r\n            </div>\r\n            {status === 'loading' && <Preloader/>}\r\n            <div>\r\n                <Button onClick={onLogOutClick} variant=\"contained\">Log out</Button>\r\n            </div>\r\n            {!editMode && <div className={s.info}>\r\n                <span>NickName</span>\r\n                <div onDoubleClick={activateEditMode}>{name}</div>\r\n                <span>Email</span>\r\n                <div onDoubleClick={activateEditMode}>{email}</div>\r\n            </div>}\r\n\r\n            {editMode && <form className={s.form} onSubmit={onSubmit}>\r\n                <div className={s.info_form}>\r\n                    <span>NickName</span>\r\n                    <Input {...register('name')}/>\r\n                    <span>Image Url</span>\r\n                    <Input {...register('avatar')}/>\r\n                </div>\r\n                <div className={s.button}>\r\n                    <Button onClick={deactivateEditMode} variant=\"contained\" color=\"secondary\">Cancel</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Save</Button>\r\n                </div>\r\n            </form>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from 'react'\r\nimport SuperButton from \"../../common/superButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunk} from \"../../reducers/authReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField} from \"@material-ui/core\";\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const formik = useFormik({\r\n            validate: (values) => {\r\n                if (!values.email) {\r\n                    return {email: 'Email is required'}\r\n                }\r\n                if (!values.password) {\r\n                    return {password: 'Password is required'}\r\n                }\r\n                if (values.password.length < 7) {\r\n                    return {password: 'Password is at least seven characters'}\r\n                }\r\n            },\r\n            initialValues: {\r\n                email: '',\r\n                password: '',\r\n                rememberMe: false\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(loginThunk(values))\r\n            },\r\n        }\r\n    );\r\n    if (isLoggedIn) {\r\n        return <Navigate to='/profile'/>\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>Login</FormLabel>\r\n                    <FormGroup>\r\n                        <TextField label='Email' type='email' {...formik.getFieldProps('email')}/>\r\n                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                        <TextField label='Password' type='password' {...formik.getFieldProps('password')}/>\r\n                        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel label='Remember me'\r\n                                          control={<Checkbox\r\n                                              {...formik.getFieldProps('rememberMe')}\r\n                                              checked={formik.values.rememberMe}/>}/>\r\n                        <div>\r\n                            <NavLink to='/restore'>Forgot?</NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton type='submit'>sign in</SuperButton>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <div>\r\n                        <NavLink to='/register'>Register</NavLink>\r\n                    </div>\r\n                </FormControl>\r\n            </form>\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {Paper} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\r\n\r\nconst useStyles = makeStyles({\r\n    stylePaper : {\r\n        width: \"413px\",\r\n        height: \"468px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        borderRadius: \"8px\",\r\n        left: \"434px\",\r\n        top: \"126px\",\r\n        padding: \"33px\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n    }\r\n});\r\n\r\nexport const InfoSentEmail = () => {\r\n    const email = useSelector<AppRootStateType, string>(s => s.restorePass.email)\r\n    const classes = useStyles()\r\n\r\n    return (\r\n\r\n        <div style={{display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\r\n            <Paper className={classes.stylePaper}>\r\n                <h1>It-incubator</h1>\r\n                <div>\r\n                    <SentimentVerySatisfiedIcon color={\"success\"} style={{width:\"108px\", height:\"108px\"}}/>\r\n                </div>\r\n                <h2  style={{color: \"green\"}}>Check Email </h2>\r\n                <h4 style={{color: \"#a9a9a9\"}}>We’ve sent an Email with instructions to email {email}</h4>\r\n            </Paper>\r\n       </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {Register} from \"../register/Register\";\r\nimport {RestorePassword} from \"../restorePassword/RestorePassword\";\r\nimport {Test} from \"../../Test\";\r\nimport Profile from \"../profile/Profile\";\r\nimport {Login} from \"../login/Login\";\r\nimport {NewPassword} from \"../newPassword/newPassword\";\r\nimport {InfoSentEmail} from \"../restorePassword/infoSentEmail/InfoSentEmail\";\r\n\r\n\r\nconst RoutesC = () => {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path='/' element={<div>default</div>}/>\r\n                <Route path='login' element={<div><Login/></div>}/>\r\n                <Route path=\"register\" element={<Register/>}/>\r\n                <Route path=\"profile\" element={<Profile/>}/>\r\n                <Route path=\"restore\" element={<RestorePassword/>}/>\r\n                <Route path=\"/set-new-password/:token\" element={<NewPassword/>}/>\r\n                <Route path=\"info-sent-email\" element={<InfoSentEmail/>}/>\r\n                <Route path=\"test\" element={<Test/>}/>\r\n                <Route path=\"/404\" element={<h1>404: PAGE NOT FOUND</h1>}/>\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoutesC;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from \"./component/header/Header\";\r\nimport RoutesC from \"./component/routes/RoutesC\";\r\nimport {Preloader} from \"./common/preloader/Preloader\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store/store\";\r\nimport {RequestStatusType} from \"./reducers/appReducer\";\r\nimport {authMe} from \"./reducers/authReducer\";\r\n\r\n\r\nfunction App() {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(authMe())\r\n    }, [])\r\n\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <RoutesC/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"../reducers/authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {registerReducer} from \"../reducers/registerReducer\";\r\nimport {profileReducer} from \"../reducers/profileReducer\";\r\nimport {restorePassReducer} from \"../reducers/restoreReducer\";\r\nimport {newPasswordReducer} from \"../reducers/newPasswordReducer\";\r\nimport {appReducer} from \"../reducers/appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    restorePass: restorePassReducer,\r\n    newPass: newPasswordReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__9dShy\",\"form\":\"Profile_form__1igXE\",\"info_form\":\"Profile_info_form__1egpn\",\"photo\":\"Profile_photo__1o8EQ\",\"info\":\"Profile_info__2BTtl\",\"button\":\"Profile_button__20D9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3-uvM\",\"errorInput\":\"SuperInputText_errorInput__36AjH\",\"error\":\"SuperInputText_error__3gt55\"};"],"sourceRoot":""}